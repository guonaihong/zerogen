{{- /* Data Model Structs */}}
{{- range .Structs }}

// {{ .StructName }} represents the structure of {{ .TableName }}.
type {{ .StructName }} {
{{- range .Fields }}
	{{- if not (eq .FieldName "DeletedAt") }}
	{{ .FieldName }} {{ .FieldType }} `json:"{{ .JSONName }}"`
	{{- end }}
{{- end }}
}

// Create{{ .StructName }}Req defines the request for creating a {{ .StructName }}.
type Create{{ .StructName }}Req {
{{- range .Fields }}
	{{- if not (or (eq .FieldName "ID") (eq .FieldName "Id") (eq .FieldName "CreatedAt") (eq .FieldName "UpdatedAt") (eq .FieldName "DeletedAt")) }}
	{{ .FieldName }} {{ .FieldType }} `json:"{{ .JSONName }}"`
	{{- end }}
{{- end }}
}

// Update{{ .StructName }}Req defines the request for updating a {{ .StructName }}.
type Update{{ .StructName }}Req {
{{- range .Fields }}
	{{- if or (eq .FieldName "ID") (eq .FieldName "Id") }}
	{{ .FieldName }} {{ .FieldType }} `path:"id"` // Primary key for identification
	{{- else if not (or (eq .FieldName "CreatedAt") (eq .FieldName "UpdatedAt") (eq .FieldName "DeletedAt")) }}
	{{ .FieldName }} {{ .FieldType }} `json:"{{ .JSONName }},optional" tomap:"{{.SnakeCaseName}},omitempty"`
	{{- end }}
{{- end }}
}

// Delete{{ .StructName }}Req defines the request for deleting a {{ .StructName }}.
type Delete{{ .StructName }}Req {
{{- range .Fields }}
	{{- if or (eq .FieldName "ID") (eq .FieldName "Id") }}
	{{ .FieldName }} {{ .FieldType }} `path:"id"` // Primary key for deletion
	{{- end }}
{{- end }}
}

// Get{{ .StructName }}ByIdReq defines the request for fetching a {{ .StructName }} by ID.
type Get{{ .StructName }}ByIdReq {
{{- range .Fields }}
	{{- if or (eq .FieldName "ID") (eq .FieldName "Id") }}
	{{ .FieldName }} {{ .FieldType }} `path:"id"` // Primary key for fetching
	{{- end }}
{{- end }}
}

// Get{{ .StructName }}ListReq defines the request for fetching a list of {{ .StructName }}.
type Get{{ .StructName }}ListReq {
	PageNum  int `form:"pageNum,optional"`  // Pagination: page number
	PageSize int `form:"pageSize,optional"` // Pagination: limit per page
}

// Get{{ .StructName }}ListResp defines the response for fetching a list of {{ .StructName }}.
type Get{{ .StructName }}ListRespData {
	Total int              `json:"total"` // Total number of records
	List  []{{ .StructName }} `json:"list"`  // List of {{ .StructName }}
}

type Get{{ .StructName }}ListResp {
	Data Get{{ .StructName }}ListRespData `json:"data"`
}

// {{ .StructName }}Resp defines the response for fetching a single {{ .StructName }}.
type {{ .StructName }}Resp {
	Data {{ .StructName }} `json:"data"`
}
{{- end }}

{{- /* Main API Definition */}}
@server (
	prefix: {{ .Prefix }}
	group:  {{ .Group }}
)
service {{ .ServiceName }} {
	@doc "创建新的{{ .ModelName }}"
	@handler Create{{ .ModelName }}
	post /{{ .ResourceName }} (Create{{ .ModelName }}Req) returns (BaseResp)

	@doc "获取{{ .ModelName }}列表"
	@handler Get{{ .ModelName }}List
	get /{{ .ResourceName }}/list (Get{{ .ModelName }}ListReq) returns (Get{{ .ModelName }}ListResp)

	@doc "通过ID获取{{ .ModelName }}"
	@handler Get{{ .ModelName }}ById
	get /{{ .ResourceName }}/:id (Get{{ .ModelName }}ByIdReq) returns ({{ .ModelName }}Resp)

	@doc "更新{{ .ModelName }}信息"
	@handler Update{{ .ModelName }}
	put /{{ .ResourceName }}/:id (Update{{ .ModelName }}Req) returns (BaseResp)

	@doc "删除{{ .ModelName }}"
	@handler Delete{{ .ModelName }}
	delete /{{ .ResourceName }}/:id (Delete{{ .ModelName }}Req) returns (BaseResp)
}